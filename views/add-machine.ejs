<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2>
                <a href="javascript:history.back()" class="text-decoration-none text-dark">
                    <i class="fas fa-arrow-left me-2"></i>
                </a>
                Add New Asset
            </h2>
        </div>
    </div>

    <% if (typeof error !== 'undefined' && error) { %>
        <div class="alert alert-danger" role="alert">
            <%= error %>
        </div>
    <% } %>

    <div class="card">
        <div class="card-body">
            <form action="/add" method="POST" enctype="multipart/form-data">
                <!-- Required Fields -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <h5 class="mb-3">Required Information</h5>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Serial Number *</label>
                        <input type="text" name="serialNumber" class="form-control" required 
                            value="<%= typeof formData !== 'undefined' ? formData.serialNumber : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Model Name *</label>
                        <input type="text" name="modelName" class="form-control" required
                            value="<%= typeof formData !== 'undefined' ? formData.modelName : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Manufacturer *</label>
                        <input type="text" name="manufacturer" class="form-control" required
                            value="<%= typeof formData !== 'undefined' ? formData.manufacturer : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Company *</label>
                        <select name="company" class="form-control" required>
                            <option value="">Select Company</option>
                            <option value="Jubilee Health" <%= typeof formData !== 'undefined' && formData.company === 'Jubilee Health' ? 'selected' : '' %>>Jubilee Health</option>
                            <option value="Jubilee Life" <%= typeof formData !== 'undefined' && formData.company === 'Jubilee Life' ? 'selected' : '' %>>Jubilee Life</option>
                            <option value="JAML" <%= typeof formData !== 'undefined' && formData.company === 'JAML' ? 'selected' : '' %>>JAML</option>
                            <option value="Jubilee Holdings" <%= typeof formData !== 'undefined' && formData.company === 'Jubilee Holdings' ? 'selected' : '' %>>Jubilee Holdings</option>
                            <option value="Jubilee Shared Services" <%= typeof formData !== 'undefined' && formData.company === 'Jubilee Shared Services' ? 'selected' : '' %>>Jubilee Shared Services</option>
                        </select>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Location *</label>
                        <input type="text" name="location" class="form-control" required
                            value="<%= typeof formData !== 'undefined' ? formData.location : '' %>">
                    </div>
                </div>

                <!-- Asset Type Section -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <h5 class="mb-3">Asset Type Details (Optional)</h5>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Asset Type</label>
                        <select name="assetType" class="form-control" id="assetTypeSelect">
                            <option value="">Select Asset Type</option>
                            <% assetTypes.forEach(function(type) { %>
                                <option value="<%= type._id %>" 
                                    <%= typeof formData !== 'undefined' && formData.assetType === type._id ? 'selected' : '' %>>
                                    <%= type.name %>
                                </option>
                            <% }); %>
                        </select>
                    </div>
                </div>

                <!-- Dynamic Attributes Section -->
                <div id="dynamicAttributes" class="row mb-4"></div>

                <!-- Additional Information -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <h5 class="mb-3">Additional Information</h5>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">New Tag Number</label>
                        <input type="text" name="newTagNumber" class="form-control"
                            value="<%= typeof formData !== 'undefined' ? formData.newTagNumber : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Old Tag Number</label>
                        <input type="text" name="oldTagNumber" class="form-control"
                            value="<%= typeof formData !== 'undefined' ? formData.oldTagNumber : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Username</label>
                        <input type="text" name="username" class="form-control"
                            value="<%= typeof formData !== 'undefined' ? formData.username : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Email Address</label>
                        <input type="email" name="emailAddress" class="form-control"
                            value="<%= typeof formData !== 'undefined' ? formData.emailAddress : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Purchase Date</label>
                        <input type="date" name="purchaseDate" class="form-control"
                            value="<%= typeof formData !== 'undefined' ? formData.purchaseDate : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Supplier</label>
                        <input type="text" name="supplier" class="form-control"
                            value="<%= typeof formData !== 'undefined' ? formData.supplier : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Amount</label>
                        <input type="number" name="amount" class="form-control"
                            value="<%= typeof formData !== 'undefined' ? formData.amount : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Invoice Number</label>
                        <input type="text" name="invoiceNumber" class="form-control"
                            value="<%= typeof formData !== 'undefined' ? formData.invoiceNumber : '' %>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Operational Status</label>
                        <select name="operationalStatus" class="form-control">
                            <option value="Operational" <%= typeof formData !== 'undefined' && formData.operationalStatus === 'Operational' ? 'selected' : '' %>>Operational</option>
                            <option value="Under Maintenance" <%= typeof formData !== 'undefined' && formData.operationalStatus === 'Under Maintenance' ? 'selected' : '' %>>Under Maintenance</option>
                            <option value="Repair Needed" <%= typeof formData !== 'undefined' && formData.operationalStatus === 'Repair Needed' ? 'selected' : '' %>>Repair Needed</option>
                        </select>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Asset Image</label>
                        <input type="file" name="machineImage" class="form-control" accept="image/*">
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <button type="submit" class="btn btn-primary">Add Asset</button>
                        <a href="javascript:history.back()" class="btn btn-secondary ms-2">Cancel</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// Add validation functions
async function checkSerialNumber(serialNumber) {
    try {
        const response = await fetch(`/check-serial/${serialNumber}`);
        const data = await response.json();
        return data.exists;
    } catch (error) {
        console.error('Error checking serial number:', error);
        return false;
    }
}

async function validateForm() {
    const serialNumber = document.querySelector('input[name="serialNumber"]').value;
    const newTagNumber = document.querySelector('input[name="newTagNumber"]').value;
    let isValid = true;
    let errorMessage = '';

    // Check serial number if provided
    if (serialNumber) {
        const exists = await checkSerialNumber(serialNumber);
        if (exists) {
            errorMessage = 'This Serial Number already exists in the system. Please use a different Serial Number.';
            isValid = false;
        }
    }

    // Check tag number if provided
    if (newTagNumber) {
        const exists = await checkSerialNumber(newTagNumber);
        if (exists) {
            errorMessage = errorMessage ? errorMessage + '\n' : '';
            errorMessage += 'This Tag Number already exists in the system. Please use a different Tag Number.';
            isValid = false;
        }
    }

    if (!isValid) {
        // Create or update error alert
        let errorAlert = document.querySelector('.alert-danger');
        if (!errorAlert) {
            errorAlert = document.createElement('div');
            errorAlert.className = 'alert alert-danger';
            document.querySelector('.card-body').insertBefore(errorAlert, document.querySelector('form'));
        }
        errorAlert.textContent = errorMessage;
        errorAlert.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }

    return isValid;
}

document.getElementById('assetTypeSelect').addEventListener('change', async function() {
    const assetTypeId = this.value;
    const dynamicAttributesDiv = document.getElementById('dynamicAttributes');
    dynamicAttributesDiv.innerHTML = '';

    if (!assetTypeId) return;

    try {
        const response = await fetch(`/asset-types/${assetTypeId}`);
        const assetType = await response.json();

        if (assetType.attributes) {
            assetType.attributes.forEach(attr => {
                const col = document.createElement('div');
                col.className = 'col-md-6 mb-3';

                const label = document.createElement('label');
                label.className = 'form-label';
                label.textContent = attr.name;
                if (!attr.required) label.textContent += ' (Optional)';

                let input;
                if (attr.type === 'select') {
                    input = document.createElement('select');
                    attr.options.forEach(option => {
                        const opt = document.createElement('option');
                        opt.value = option;
                        opt.textContent = option;
                        input.appendChild(opt);
                    });
                } else if (attr.type === 'date') {
                    input = document.createElement('input');
                    input.type = 'date';
                } else {
                    input = document.createElement('input');
                    input.type = attr.type;
                }

                input.className = 'form-control';
                input.name = `dynamicAttributes[${attr.name}]`;
                input.required = attr.required || false;

                col.appendChild(label);
                col.appendChild(input);
                dynamicAttributesDiv.appendChild(col);
            });
        }
    } catch (error) {
        console.error('Error fetching asset type:', error);
    }
});

// Add form submission handler
document.querySelector('form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    // Validate form before submission
    if (!await validateForm()) {
        return;
    }
    
    // Create FormData object
    const formData = new FormData(this);
    
    // Collect dynamic attributes
    const dynamicAttributes = {};
    const dynamicInputs = document.querySelectorAll('[name^="dynamicAttributes["]');
    dynamicInputs.forEach(input => {
        const name = input.name.match(/\[(.*?)\]/)[1];
        dynamicAttributes[name] = input.value;
    });
    
    // Add dynamic attributes as JSON string
    formData.append('dynamicAttributes', JSON.stringify(dynamicAttributes));
    
    try {
        const response = await fetch(this.action, {
            method: 'POST',
            body: formData
        });

        const data = await response.json();
        
        if (!response.ok) {
            throw new Error(data.error || 'An error occurred while saving the asset');
        }
        
        // Redirect on success
        window.location.href = '/company?success=Asset added successfully';
    } catch (error) {
        console.error('Error:', error);
        
        // Create or update error alert
        let errorAlert = document.querySelector('.alert-danger');
        if (!errorAlert) {
            errorAlert = document.createElement('div');
            errorAlert.className = 'alert alert-danger';
            document.querySelector('.card-body').insertBefore(errorAlert, document.querySelector('form'));
        }
        
        // Set error message
        errorAlert.textContent = error.message;
        
        // Scroll to error message
        errorAlert.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
});

// Add real-time validation for serial number and tag number
document.querySelector('input[name="serialNumber"]').addEventListener('blur', async function() {
    if (this.value) {
        const exists = await checkSerialNumber(this.value);
        if (exists) {
            let errorAlert = document.querySelector('.alert-danger');
            if (!errorAlert) {
                errorAlert = document.createElement('div');
                errorAlert.className = 'alert alert-danger';
                document.querySelector('.card-body').insertBefore(errorAlert, document.querySelector('form'));
            }
            errorAlert.textContent = 'This Serial Number already exists in the system. Please use a different Serial Number.';
            errorAlert.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    }
});

document.querySelector('input[name="newTagNumber"]').addEventListener('blur', async function() {
    if (this.value) {
        const exists = await checkSerialNumber(this.value);
        if (exists) {
            let errorAlert = document.querySelector('.alert-danger');
            if (!errorAlert) {
                errorAlert = document.createElement('div');
                errorAlert.className = 'alert alert-danger';
                document.querySelector('.card-body').insertBefore(errorAlert, document.querySelector('form'));
            }
            errorAlert.textContent = 'This Tag Number already exists in the system. Please use a different Tag Number.';
            errorAlert.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    }
});
</script>